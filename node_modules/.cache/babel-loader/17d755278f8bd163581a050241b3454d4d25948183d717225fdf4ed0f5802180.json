{"ast":null,"code":"var _jsxFileName = \"E:\\\\1\\\\curswork\\\\curswork\\\\src\\\\components\\\\TalentTree.tsx\",\n  _s = $RefreshSig$();\nimport './TalentTree.scss';\nimport React, { useCallback } from 'react';\nimport { Talent } from './Talent';\nimport { getPointsInSpec, canLearnTalent, SORT_TALENTS_DESC, getUnmetRequirements } from '../lib/tree';\nimport { talentsBySpec, specNames, talentsById } from '../data/talents';\nimport { Arrow } from './Arrow';\nimport { resetSpec } from '../store/calculator/actions';\nimport { connect } from 'react-redux';\nimport { Controller, Tooltip, Trigger } from './Tooltip';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TalentTree = ({\n  specId,\n  knownTalents,\n  availablePoints,\n  onTalentPress,\n  resetSpec\n}) => {\n  _s();\n  const talents = Object.values(talentsBySpec[specId]).sort(SORT_TALENTS_DESC);\n  const pointsInSpec = getPointsInSpec(specId, knownTalents);\n  const handleClick = useCallback(talentId => onTalentPress(specId, talentId, 1), [specId, onTalentPress]);\n  const handleRightClick = useCallback(talentId => onTalentPress(specId, talentId, -1), [specId, onTalentPress]);\n  const handleResetSpec = useCallback(resetSpec ? () => resetSpec(specId) : () => {}, [resetSpec, specId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tree\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tree__header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [specNames[specId], \" (\", pointsInSpec, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), pointsInSpec > 0 && /*#__PURE__*/_jsxDEV(Controller, {\n        children: [/*#__PURE__*/_jsxDEV(Trigger, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tree__reset\",\n            onClick: handleResetSpec,\n            children: \"x\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"green\",\n            children: [\"Reset points in \", specNames[specId]]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tree__body\",\n      style: {\n        backgroundImage: `url(${require(`../images/specs/${specId}.jpg`)})`\n      },\n      children: talents.map(talent => {\n        const points = knownTalents.get(talent.id, 0);\n        const canLearn = canLearnTalent(knownTalents, talent);\n        const unmetRequirements = getUnmetRequirements(talent, knownTalents, pointsInSpec, specNames[specId]);\n        return /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Talent, {\n            talent: talent,\n            points: points,\n            errors: unmetRequirements,\n            onClick: handleClick,\n            onRightClick: handleRightClick,\n            disabled: availablePoints === 0 || !canLearn\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), !!talent.requires.length && /*#__PURE__*/_jsxDEV(Arrow, {\n            from: talentsById[talent.requires[0].id],\n            to: talent,\n            active: points > 0 || canLearn\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this)]\n        }, talent.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 18\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(TalentTree, \"AgrxzCxzY0WRCs1qAzASYm5w1mA=\");\n_c = TalentTree;\nTalentTree.whyDidYouRender = true;\nexport default connect(null, {\n  resetSpec\n})(TalentTree);\nvar _c;\n$RefreshReg$(_c, \"TalentTree\");","map":{"version":3,"names":["React","useCallback","Talent","getPointsInSpec","canLearnTalent","SORT_TALENTS_DESC","getUnmetRequirements","talentsBySpec","specNames","talentsById","Arrow","resetSpec","connect","Controller","Tooltip","Trigger","jsxDEV","_jsxDEV","TalentTree","specId","knownTalents","availablePoints","onTalentPress","_s","talents","Object","values","sort","pointsInSpec","handleClick","talentId","handleRightClick","handleResetSpec","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","backgroundImage","require","map","talent","points","get","id","canLearn","unmetRequirements","Fragment","errors","onRightClick","disabled","requires","length","from","to","active","_c","whyDidYouRender","$RefreshReg$"],"sources":["E:/1/curswork/curswork/src/components/TalentTree.tsx"],"sourcesContent":["import './TalentTree.scss'\nimport React, { useCallback } from 'react'\nimport { Map }  from 'immutable'\nimport { Talent } from './Talent';\nimport { getPointsInSpec, canLearnTalent, SORT_TALENTS_DESC, getUnmetRequirements } from '../lib/tree';\nimport { talentsBySpec, specNames, talentsById } from '../data/talents'\nimport { Arrow } from './Arrow'\nimport { resetSpec } from '../store/calculator/actions'\nimport { connect } from 'react-redux';\nimport { Controller, Tooltip, Trigger } from './Tooltip'\n\ninterface Props {\n  specId: number\n  availablePoints: number\n  knownTalents: Map<number, number>\n  onTalentPress: TalentClickHandler\n  resetSpec?: typeof resetSpec\n}\n\nexport const TalentTree: React.FC<Props> = ({ specId, knownTalents, availablePoints, onTalentPress, resetSpec }) => {\n  const talents = Object.values(talentsBySpec[specId]).sort(SORT_TALENTS_DESC)\n  const pointsInSpec = getPointsInSpec(specId, knownTalents)\n\n  const handleClick = useCallback(\n    (talentId) => onTalentPress(specId, talentId, 1), \n    [specId, onTalentPress]\n  )\n  const handleRightClick = useCallback(\n    (talentId) => onTalentPress(specId, talentId, -1), \n    [specId, onTalentPress]\n  )\n  const handleResetSpec = useCallback(\n    resetSpec ? () => resetSpec(specId) : () => {},\n    [resetSpec, specId]\n  )\n\n  return (\n    <div className=\"tree\">\n      <div className=\"tree__header\">\n        <h3>{specNames[specId]} ({pointsInSpec})</h3>\n        {pointsInSpec > 0 && \n          <Controller>\n            <Trigger>\n              <div className=\"tree__reset\" onClick={handleResetSpec}>x</div>\n            </Trigger>\n            <Tooltip><span className=\"green\">Reset points in {specNames[specId]}</span></Tooltip>\n          </Controller>\n        }\n      </div>\n\n      <div className=\"tree__body\" style={{ backgroundImage: `url(${require(`../images/specs/${specId}.jpg`)})` }}>\n        {talents.map((talent) => {\n          const points = knownTalents.get(talent.id, 0)\n          const canLearn = canLearnTalent(knownTalents, talent)\n          const unmetRequirements = getUnmetRequirements(talent, knownTalents, pointsInSpec, specNames[specId])\n\n          return <React.Fragment key={talent.id}>\n            <Talent\n              talent={talent}\n              points={points}\n              errors={unmetRequirements}\n              onClick={handleClick}\n              onRightClick={handleRightClick}\n              disabled={availablePoints === 0 || !canLearn}\n            />\n\n            {!!talent.requires.length &&\n              <Arrow\n                from={talentsById[talent.requires[0].id]}\n                to={talent}\n                active={points > 0 || canLearn}\n              />\n            }\n          </React.Fragment>\n        })}\n      </div>\n    </div>\n  )\n}\n\n;(TalentTree as any).whyDidYouRender = true\n\nexport default connect(\n  null,\n  { resetSpec }\n)(TalentTree)"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}