{"ast":null,"code":"import { Map } from \"immutable\";\nimport { SET_CLASS, ADD_POINT, REMOVE_POINT, SET_POINTS, RESET_SPEC } from \"./types\";\nimport { canLearnTalent, canUnlearnTalent, encodeKnownTalents } from \"../../lib/tree\";\nimport { talentsById, talentsBySpec } from \"../../data/talents\";\nconst initialState = {\n  classId: null,\n  points: Map(),\n  pointsEncoded: \"\"\n};\nexport default function (state = initialState, action) {\n  const {\n    classId,\n    points\n  } = state;\n  switch (action.type) {\n    case SET_CLASS:\n      {\n        if (classId === action.classId) {\n          return state;\n        }\n        return {\n          ...state,\n          classId: action.classId,\n          points: action.points || Map(),\n          pointsEncoded: \"\"\n        };\n      }\n    case ADD_POINT:\n      {\n        const {\n          talentId\n        } = action;\n        const talent = talentsById[talentId];\n        if (!canLearnTalent(points, talent)) {\n          return state;\n        }\n        const nextPoints = points.set(talentId, points.get(talentId, 0) + 1);\n        return {\n          ...state,\n          points: nextPoints,\n          pointsEncoded: encodeKnownTalents(nextPoints, classId)\n        };\n      }\n    case REMOVE_POINT:\n      {\n        const {\n          talentId\n        } = action;\n        const talent = talentsById[talentId];\n        if (!canUnlearnTalent(points, talent)) {\n          return state;\n        }\n        const nextPoints = points.set(talentId, points.get(talentId, 1) - 1);\n        return {\n          ...state,\n          points: nextPoints,\n          pointsEncoded: encodeKnownTalents(nextPoints, classId)\n        };\n      }\n    case SET_POINTS:\n      {\n        if (points.equals(action.points)) {\n          return state;\n        }\n        return {\n          ...state,\n          points: action.points\n        };\n      }\n    case RESET_SPEC:\n      {\n        const resetIds = Object.values(talentsBySpec[action.specId]).map(t => t.id);\n        const nextPoints = points.filter((_, id) => resetIds.indexOf(id) === -1);\n        return {\n          ...state,\n          points: nextPoints\n        };\n      }\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["Map","SET_CLASS","ADD_POINT","REMOVE_POINT","SET_POINTS","RESET_SPEC","canLearnTalent","canUnlearnTalent","encodeKnownTalents","talentsById","talentsBySpec","initialState","classId","points","pointsEncoded","state","action","type","talentId","talent","nextPoints","set","get","equals","resetIds","Object","values","specId","map","t","id","filter","_","indexOf"],"sources":["E:/1/curswork/curswork - JSJSJSJSJS/src/store/calculator/reducers.js"],"sourcesContent":["import { Map } from \"immutable\"\nimport {\n  SET_CLASS,\n  ADD_POINT,\n  REMOVE_POINT,\n  SET_POINTS,\n  RESET_SPEC\n} from \"./types\"\nimport {\n  canLearnTalent,\n  canUnlearnTalent,\n  encodeKnownTalents\n} from \"../../lib/tree\"\nimport { talentsById, talentsBySpec } from \"../../data/talents\"\n\nconst initialState = {\n  classId: null,\n  points: Map(),\n  pointsEncoded: \"\"\n}\n\nexport default function(state = initialState, action) {\n  const { classId, points } = state\n\n  switch (action.type) {\n    case SET_CLASS: {\n      if (classId === action.classId) {\n        return state\n      }\n      return {\n        ...state,\n        classId: action.classId,\n        points: action.points || Map(),\n        pointsEncoded: \"\"\n      }\n    }\n\n    case ADD_POINT: {\n      const { talentId } = action\n      const talent = talentsById[talentId]\n      if (!canLearnTalent(points, talent)) {\n        return state\n      }\n      const nextPoints = points.set(talentId, points.get(talentId, 0) + 1)\n      return {\n        ...state,\n        points: nextPoints,\n        pointsEncoded: encodeKnownTalents(nextPoints, classId)\n      }\n    }\n\n    case REMOVE_POINT: {\n      const { talentId } = action\n      const talent = talentsById[talentId]\n      if (!canUnlearnTalent(points, talent)) {\n        return state\n      }\n      const nextPoints = points.set(talentId, points.get(talentId, 1) - 1)\n      return {\n        ...state,\n        points: nextPoints,\n        pointsEncoded: encodeKnownTalents(nextPoints, classId)\n      }\n    }\n\n    case SET_POINTS: {\n      if (points.equals(action.points)) {\n        return state\n      }\n      return {\n        ...state,\n        points: action.points\n      }\n    }\n\n    case RESET_SPEC: {\n      const resetIds = Object.values(talentsBySpec[action.specId]).map(\n        t => t.id\n      )\n      const nextPoints = points.filter((_, id) => resetIds.indexOf(id) === -1)\n      return {\n        ...state,\n        points: nextPoints\n      }\n    }\n\n    default:\n      return state\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}